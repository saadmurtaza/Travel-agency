#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_DESTINATIONS 50
#define MAX_FLIGHTS 50
#define MAX_TRIPS 50

typedef struct {
    char name[50];
    char country[50];
} Destination;

typedef struct {
    char airline[50];
    int flight_number;
    char takeoff[50];
    char landing[50];
    float cost;
} Flight;

typedef struct {
    Destination destinations[MAX_DESTINATIONS];
    Flight flights[MAX_FLIGHTS];
    int num_destinations;
    int num_flights;
} Trip;

Destination destinations[MAX_DESTINATIONS];
Flight flights[MAX_FLIGHTS];
Trip trips[MAX_TRIPS];

int destination_count = 0;
int flight_count = 0;
int trip_count = 0;

void addDestination();
void viewDestinations();
void addFlight();
void viewFlights();
void createTrip();
void viewTrips();

int main() {
    int choice;

    while (1) {
        printf("\nTravel Agency Management System\n");
        printf("1. Add Destination\n");
        printf("2. View Destinations\n");
        printf("3. Add Flight\n");
        printf("4. View Flights\n");
        printf("5. Create Trip\n");
        printf("6. View Trips\n");
        printf("7. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1: addDestination(); break;
            case 2: viewDestinations(); break;
            case 3: addFlight(); break;
            case 4: viewFlights(); break;
            case 5: createTrip(); break;
            case 6: viewTrips(); break;
            case 7: exit(0);
            default: printf("Invalid choice. Please try again.\n");
        }
    }
    return 0;
}

void addDestination() {
    if (destination_count >= MAX_DESTINATIONS) {
        printf("Maximum destinations reached.\n");
        return;
    }

    printf("Enter destination name: ");
    scanf("%s", destinations[destination_count].name);
    printf("Enter country name: ");
    scanf("%s", destinations[destination_count].country);

    destination_count++;
    printf("Destination added successfully.\n");
}

void viewDestinations() {
    printf("\nList of Destinations:\n");
    for (int i = 0; i < destination_count; i++) {
        printf("Destination %d: %s, %s\n", i + 1, destinations[i].name, destinations[i].country);
    }
}

void addFlight() {
    if (flight_count >= MAX_FLIGHTS) {
        printf("Maximum flights reached.\n");
        return;
    }

    printf("Enter airline name: ");
    scanf("%s", flights[flight_count].airline);
    printf("Enter flight number: ");
    scanf("%d", &flights[flight_count].flight_number);
    printf("Enter takeoff country: ");
    scanf("%s", flights[flight_count].takeoff);
    printf("Enter landing country: ");
    scanf("%s", flights[flight_count].landing);
    printf("Enter flight cost: ");
    scanf("%f", &flights[flight_count].cost);

    flight_count++;
    printf("Flight added successfully.\n");
}

void viewFlights() {
    printf("\nList of Flights:\n");
    for (int i = 0; i < flight_count; i++) {
        printf("Flight %d: %s %d from %s to %s - $%.2f\n", 
            i + 1, flights[i].airline, flights[i].flight_number, 
            flights[i].takeoff, flights[i].landing, flights[i].cost);
    }
}

void createTrip() {
    if (trip_count >= MAX_TRIPS) {
        printf("Maximum trips reached.\n");
        return;
    }

    Trip *trip = &trips[trip_count];
    trip->num_destinations = 0;
    trip->num_flights = 0;

    int num_destinations;
    printf("Enter number of destinations for the trip (minimum 2): ");
    scanf("%d", &num_destinations);

    if (num_destinations < 2) {
        printf("A trip must have at least two destinations.\n");
        return;
    }

    for (int i = 0; i < num_destinations; i++) {
        printf("Enter destination %d name: ", i + 1);
        scanf("%s", trip->destinations[i].name);
        printf("Enter country: ");
        scanf("%s", trip->destinations[i].country);
        trip->num_destinations++;
    }

    for (int i = 0; i < num_destinations - 1; i++) {
        printf("Enter flight details to connect %s and %s:\n", 
            trip->destinations[i].country, trip->destinations[i+1].country);

        printf("Airline: ");
        scanf("%s", trip->flights[i].airline);
        printf("Flight number: ");
        scanf("%d", &trip->flights[i].flight_number);
        strcpy(trip->flights[i].takeoff, trip->destinations[i].country);
        strcpy(trip->flights[i].landing, trip->destinations[i+1].country);
        printf("Cost: ");
        scanf("%f", &trip->flights[i].cost);
        trip->num_flights++;
    }

    trip_count++;
    printf("Trip created successfully.\n");
}

void viewTrips() {
    printf("\nList of Trips:\n");
    for (int i = 0; i < trip_count; i++) {
        printf("Trip %d:\n", i + 1);
        printf(" Destinations:\n");
        for (int j = 0; j < trips[i].num_destinations; j++) {
            printf("  %s, %s\n", trips[i].destinations[j].name, trips[i].destinations[j].country);
        }
        printf(" Flights:\n");
        for (int k = 0; k < trips[i].num_flights; k++) {
            printf("  %s %d from %s to %s - $%.2f\n",
                trips[i].flights[k].airline, trips[i].flights[k].flight_number,
                trips[i].flights[k].takeoff, trips[i].flights[k].landing, trips[i].flights[k].cost);
        }
    }
}
